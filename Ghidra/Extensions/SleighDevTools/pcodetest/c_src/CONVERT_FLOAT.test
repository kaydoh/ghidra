#if defined(HAS_FLOAT)

#include "pcode_test.h"

TEST pcode_f4_to_f4_convert_Main()
{
	extern f4 pcode_f4_to_f4_convert(f4 a);
	ASSERTF4(pcode_f4_to_f4_convert((f4)0), (f4)0);
	ASSERTF4(pcode_f4_to_f4_convert(-(f4)0), -(f4)0);
	ASSERTF4(pcode_f4_to_f4_convert((f4)U4_MAGIC), (f4)U4_MAGIC);
	ASSERTF4(pcode_f4_to_f4_convert((f4)M_PI), (f4)M_PI);
	ASSERTF4(pcode_f4_to_f4_convert((f4)-M_PI), (f4)-M_PI);
}

TEST pcode_i1_to_f4_convert_Main()
{
	extern f4 pcode_i1_to_f4_convert(i1 a);
	ASSERTF4(pcode_i1_to_f4_convert(0), (i1)0);
	ASSERTF4(pcode_i1_to_f4_convert(U1_MAGIC), (f4)U1_MAGIC);
	ASSERTF4(pcode_i1_to_f4_convert(U1_55), (f4)U1_55);
	ASSERTF4(pcode_i1_to_f4_convert(-U1_56), (f4)-U1_56);
	ASSERTF4(pcode_i1_to_f4_convert(I1_MIN), (f4)I1_MIN);
	ASSERTF4(pcode_i1_to_f4_convert(I1_MAX), (f4)I1_MAX);
	ASSERTF4(pcode_i1_to_f4_convert(-1), (f4)-1);
}

TEST pcode_i2_to_f4_convert_Main()
{
	extern f4 pcode_i2_to_f4_convert(i2 a);
	ASSERTF4(pcode_i2_to_f4_convert(0), (i2)0);
	ASSERTF4(pcode_i2_to_f4_convert(U2_MAGIC), (f4)U2_MAGIC);
	ASSERTF4(pcode_i2_to_f4_convert(U2_55), (f4)U2_55);
	ASSERTF4(pcode_i2_to_f4_convert(-U2_56), (f4)-U2_56);
	ASSERTF4(pcode_i2_to_f4_convert(I2_MIN), (f4)I2_MIN);
	ASSERTF4(pcode_i2_to_f4_convert(I2_MAX), (f4)I2_MAX);
	ASSERTF4(pcode_i2_to_f4_convert(-1), (f4)-1);
}

TEST pcode_i4_to_f4_convert_Main()
{
	extern f4 pcode_i4_to_f4_convert(i4 a);
	ASSERTF4(pcode_i4_to_f4_convert(0), (i4)0);
	ASSERTF4(pcode_i4_to_f4_convert(U4_MAGIC), (f4)U4_MAGIC);
	ASSERTF4(pcode_i4_to_f4_convert(U4_55), (f4)U4_55);
	ASSERTF4(pcode_i4_to_f4_convert(-U4_56), (f4)-U4_56);
	ASSERTF4(pcode_i4_to_f4_convert(I4_MIN), (f4)I4_MIN);
	ASSERTF4(pcode_i4_to_f4_convert(-1), (f4)-1);
}

TEST pcode_u1_to_f4_convert_Main()
{
	extern f4 pcode_u1_to_f4_convert(u1 a);
	ASSERTF4(pcode_u1_to_f4_convert(0), (u1)0);
	ASSERTF4(pcode_u1_to_f4_convert(U1_MAGIC), (f4)U1_MAGIC);
	ASSERTF4(pcode_u1_to_f4_convert(U1_55), (f4)U1_55);
	ASSERTF4(pcode_u1_to_f4_convert(U1_AA), (f4)U1_AA);
	ASSERTF4(pcode_u1_to_f4_convert(U1_MSB), (f4)U1_MSB);
	ASSERTF4(pcode_u1_to_f4_convert(U1_MAX), (f4)U1_MAX);
}

TEST pcode_u2_to_f4_convert_Main()
{
	extern f4 pcode_u2_to_f4_convert(u2 a);
	ASSERTF4(pcode_u2_to_f4_convert(0), (u2)0);
	ASSERTF4(pcode_u2_to_f4_convert(U2_MAGIC), (f4)U2_MAGIC);
	ASSERTF4(pcode_u2_to_f4_convert(U2_55), (f4)U2_55);
	ASSERTF4(pcode_u2_to_f4_convert(U2_AA), (f4)U2_AA);
	ASSERTF4(pcode_u2_to_f4_convert(U2_MSB), (f4)U2_MSB);
	ASSERTF4(pcode_u2_to_f4_convert(U2_MAX), (f4)U2_MAX);
}

TEST pcode_u4_to_f4_convert_Main()
{
	extern f4 pcode_u4_to_f4_convert(u4 a);
	ASSERTF4(pcode_u4_to_f4_convert(0), (u4)0);
	ASSERTF4(pcode_u4_to_f4_convert(U4_MAGIC), (f4)U4_MAGIC);
	ASSERTF4(pcode_u4_to_f4_convert(U4_55), (f4)U4_55);
	ASSERTF4(pcode_u4_to_f4_convert(U4_AA), (f4)U4_AA);
	ASSERTF4(pcode_u4_to_f4_convert(U4_MSB), (f4)U4_MSB);
}

TEST pcode_f4_to_i1_convert_Main()
{
	extern i1 pcode_f4_to_i1_convert(f4 a);
	ASSERTI1(pcode_f4_to_i1_convert((f4)0), 0);
	ASSERTI1(pcode_f4_to_i1_convert(-(f4)0), 0);
	ASSERTI1(pcode_f4_to_i1_convert((f4)-1), -1);
	ASSERTI1(pcode_f4_to_i1_convert((f4)U1_MAGIC), U1_MAGIC);
	ASSERTI1(pcode_f4_to_i1_convert((f4)I1_MIN), I1_MIN);
	ASSERTI1(pcode_f4_to_i1_convert((f4)I1_MAX), I1_MAX);
	ASSERTI1(pcode_f4_to_i1_convert((f4)M_PI), 3);
	ASSERTI1(pcode_f4_to_i1_convert((f4)-M_PI), -3);
}

TEST pcode_f4_to_i2_convert_Main()
{
	extern i2 pcode_f4_to_i2_convert(f4 a);
	ASSERTI2(pcode_f4_to_i2_convert((f4)0), 0);
	ASSERTI2(pcode_f4_to_i2_convert(-(f4)0), 0);
	ASSERTI2(pcode_f4_to_i2_convert((f4)-1), -1);
	ASSERTI2(pcode_f4_to_i2_convert((f4)U2_MAGIC), U2_MAGIC);
	ASSERTI2(pcode_f4_to_i2_convert((f4)I2_MIN), I2_MIN);
	ASSERTI2(pcode_f4_to_i2_convert((f4)I2_MAX), I2_MAX);
	ASSERTI2(pcode_f4_to_i2_convert((f4)M_PI), 3);
	ASSERTI2(pcode_f4_to_i2_convert((f4)-M_PI), -3);
}

TEST pcode_f4_to_i4_convert_Main()
{
	extern i4 pcode_f4_to_i4_convert(f4 a);
	ASSERTI4(pcode_f4_to_i4_convert((f4)0), 0);
	ASSERTI4(pcode_f4_to_i4_convert(-(f4)0), 0);
	ASSERTI4(pcode_f4_to_i4_convert((f4)-1), -1);
	ASSERTI4(pcode_f4_to_i4_convert((f4)U4_MAGIC), U4_MAGIC + 0xf);
	ASSERTI4(pcode_f4_to_i4_convert((f4)I4_MIN), I4_MIN);
	ASSERTI4(pcode_f4_to_i4_convert((f4)I4_MAX), I4_MIN);
	ASSERTI4(pcode_f4_to_i4_convert((f4)M_PI), 3);
	ASSERTI4(pcode_f4_to_i4_convert((f4)-M_PI), -3);
}

TEST pcode_f4_to_u1_convert_Main()
{
	extern u1 pcode_f4_to_u1_convert(f4 a);
	ASSERTU1(pcode_f4_to_u1_convert((f4)0), 0);
	ASSERTU1(pcode_f4_to_u1_convert(-(f4)0), 0);
	ASSERTU1(pcode_f4_to_u1_convert((f4)-1), U1_MAX);
	ASSERTU1(pcode_f4_to_u1_convert((f4)U1_MAGIC), U1_MAGIC);
	ASSERTU1(pcode_f4_to_u1_convert((f4)M_PI), 3);
	ASSERTU1(pcode_f4_to_u1_convert((f4)-M_PI), 0xfd);
	ASSERTU1(pcode_f4_to_u1_convert((f4)U1_MAX), U1_MAX);
}

TEST pcode_f4_to_u2_convert_Main()
{
	extern u2 pcode_f4_to_u2_convert(f4 a);
	ASSERTU2(pcode_f4_to_u2_convert((f4)0), 0);
	ASSERTU2(pcode_f4_to_u2_convert(-(f4)0), 0);
	ASSERTU2(pcode_f4_to_u2_convert((f4)-1), U2_MAX);
	ASSERTU2(pcode_f4_to_u2_convert((f4)U2_MAGIC), U2_MAGIC);
	ASSERTU2(pcode_f4_to_u2_convert((f4)M_PI), 0x3);
	ASSERTU2(pcode_f4_to_u2_convert((f4)-M_PI), 0xfffd);
	ASSERTU2(pcode_f4_to_u2_convert((f4)U2_MAX), U2_MAX);
}

TEST pcode_f4_to_u4_convert_Main()
{
	extern u4 pcode_f4_to_u4_convert(f4 a);
	ASSERTU4(pcode_f4_to_u4_convert((f4)0), 0);
	ASSERTU4(pcode_f4_to_u4_convert(-(f4)0), 0);
	ASSERTU4(pcode_f4_to_u4_convert((f4)-1), U4_MAX);
	ASSERTU4(pcode_f4_to_u4_convert((f4)U4_MAGIC), U4_MAGIC + 0xf);
	ASSERTU4(pcode_f4_to_u4_convert((f4)M_PI), 3);
	ASSERTU4(pcode_f4_to_u4_convert((f4)-M_PI), 0xfffffffd);
}

#if defined(HAS_LONGLONG)

TEST pcode_i8_to_f4_convert_Main()
{
	extern f4 pcode_i8_to_f4_convert(i8 a);
	ASSERTF4(pcode_i8_to_f4_convert(0), (i8)0);
	ASSERTF4(pcode_i8_to_f4_convert(U8_MAGIC), (f4)U8_MAGIC);
	ASSERTF4(pcode_i8_to_f4_convert(U8_55), (f4)U8_55);
	ASSERTF4(pcode_i8_to_f4_convert(-U8_56), (f4)-U8_56);
	ASSERTF4(pcode_i8_to_f4_convert(I8_MIN), (f4)I8_MIN);
	ASSERTF4(pcode_i8_to_f4_convert(I8_MAX), (f4)I8_MAX);
	ASSERTF4(pcode_i8_to_f4_convert(-1), (f4)-1);
}

TEST pcode_f4_to_i8_convert_Main()
{
	extern i8 pcode_f4_to_i8_convert(f4 a);
	ASSERTI8(pcode_f4_to_i8_convert((f4)0), 0);
	ASSERTI8(pcode_f4_to_i8_convert(-(f4)0), 0);
	ASSERTI8(pcode_f4_to_i8_convert((f4)-1), -1);
	ASSERTI8(pcode_f4_to_i8_convert((f4)I8_MIN), I8_MIN);
	ASSERTI8(pcode_f4_to_i8_convert((f4)I8_MAX), I8_MAX);
	ASSERTI8(pcode_f4_to_i8_convert((f4)M_PI), 3);
	ASSERTI8(pcode_f4_to_i8_convert((f4)-M_PI), -3);
}

TEST pcode_u8_to_f4_convert_Main()
{
	extern f4 pcode_u8_to_f4_convert(u8 a);
	ASSERTF4(pcode_u8_to_f4_convert(0), (u8)0);
	ASSERTF4(pcode_u8_to_f4_convert(U8_MAGIC), (f4)U8_MAGIC);
	ASSERTF4(pcode_u8_to_f4_convert(U8_55), (f4)U8_55);
	ASSERTF4(pcode_u8_to_f4_convert(U8_AA), (f4)U8_AA);
	ASSERTF4(pcode_u8_to_f4_convert(U8_MSB), (f4)U8_MSB);
}

TEST pcode_f4_to_u8_convert_Main()
{
	extern u8 pcode_f4_to_u8_convert(f4 a);
	ASSERTU8(pcode_f4_to_u8_convert((f4)0), 0);
	ASSERTU8(pcode_f4_to_u8_convert(-(f4)0), 0);
	ASSERTU8(pcode_f4_to_u8_convert((f4)-1), U8_MAX);
	ASSERTU8(pcode_f4_to_u8_convert((f4)I8_MIN), U8_MSB);
	ASSERTU8(pcode_f4_to_u8_convert((f4)M_PI), 3);
	ASSERTU8(pcode_f4_to_u8_convert((f4)-M_PI), 0xfffffffffffffffd);
}

#endif // HAS_LONGLONG

MAIN CONVERT_FLOAT_main() { }

#endif // HAS_FLOAT